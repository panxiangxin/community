<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="life.pxx.community.mapper.QuestionExtMapper">
  <resultMap id="BaseResultMap" type="life.pxx.community.model.Question">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="GMT_CREATE" jdbcType="BIGINT" property="gmtCreate" />
    <result column="GMT_MODIFIED" jdbcType="BIGINT" property="gmtModified" />
    <result column="CREATOR" jdbcType="INTEGER" property="creator" />
    <result column="COMMENT_COUNT" jdbcType="INTEGER" property="commentCount" />
    <result column="VIEW_COUNT" jdbcType="INTEGER" property="viewCount" />
    <result column="LIKE_COUNT" jdbcType="INTEGER" property="likeCount" />
    <result column="TAG" jdbcType="VARCHAR" property="tag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="life.pxx.community.model.Question">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 08 20:49:37 CST 2019.
    -->
    <result column="DESCRIPTION" jdbcType="CLOB" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 08 20:49:37 CST 2019.
    -->
    ID, TITLE, GMT_CREATE, GMT_MODIFIED, CREATOR, COMMENT_COUNT, VIEW_COUNT, LIKE_COUNT,
    TAG
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 08 20:49:37 CST 2019.
    -->
    DESCRIPTION
  </sql>
  <select id="selectRelated" parameterType="life.pxx.community.model.Question" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from QUESTION
    where ID != #{id,jdbcType=BIGINT} and TAG REGEXP #{tag}
  </select>
  <update id="updateByPrimaryKeyInc" parameterType="life.pxx.community.model.Question">
    update QUESTION
    set
    VIEW_COUNT = VIEW_COUNT + #{viewCount,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
    <update id="incCommentCount" parameterType="life.pxx.community.model.Question">
      update QUESTION
      set
        COMMENT_COUNT = COMMENT_COUNT + #{commentCount,jdbcType=INTEGER}
      where ID = #{id,jdbcType=BIGINT}
    </update>

    <select id="countBySearchAndTag" parameterType="life.pxx.community.dto.QueryQuestionDTO" resultType="java.lang.Integer">
      select count(*)
      from QUESTION
      <where>
      <if test="search != null and search != ''">
        and TITLE REGEXP #{search}
      </if>
      <if test="tag != null and tag != ''">
        and TAG REGEXP #{tag}
      </if>
        <if test="sort != null and sort != '' and sort == 'no'">
          and comment_count = 0
        </if>
        <if test="time != null and time != ''">
          and gmt_create > #{time}
        </if>
      </where>
    </select>
  <select id="selectBySearchAndTag" parameterType="life.pxx.community.dto.QueryQuestionDTO" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from QUESTION
    <where>
    <if test="search != null and search != ''">
      and TITLE REGEXP #{search,jdbcType=VARCHAR}
    </if>
    <if test="tag != null and tag != ''">
      and TAG REGEXP #{tag,jdbcType=VARCHAR}
    </if>
      <if test="sort != null and sort != '' and sort == 'no'">
        and COMMENT_COUNT = 0
      </if>
      <if test="time != null">
        and GMT_CREATE > #{time,jdbcType=BIGINT}
      </if>
    </where>
    <if test="sort == null or sort == ''">
      order by GMT_CREATE desc
    </if>
    <if test="sort != null and sort != '' and sort == 'new'">
      order by GMT_CREATE desc
    </if>
    <if test="sort != null and sort != '' and sort == 'no'">
      order by GMT_CREATE desc
    </if>
    <if test="sort != null and sort != '' and  (sort == 'hot' || sort == 'hot7' || sort == 'hot30')">
      order by COMMENT_COUNT desc
    </if>
    limit #{page,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>

</mapper>